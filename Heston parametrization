def OU_Calibrate_ML(S,delta):
    n   = len(S)-1
    Sx  = sum(S[1,n] )
    Sy  = sum( S(2,n+1) )
    Sxx = sum( S(1,n)**2)
    Sxy = sum( S(1,n)*S(2,n+1))
    Syy = sum( S(2,n+1)**2 )
 
    mu  = (Sy*Sxx - Sx*Sxy) / (n*(Sxx - Sxy) - (Sx**2 - Sx*Sy))
    lam = -log((Sxy - mu*Sx - mu*Sy + n*mu**2) / (Sxx -2*mu*Sx + n*mu**2) ) / delta
    a = exp(-lamb*delta)
    sigmah2 = (Syy - 2*a*Sxy + a**2*Sxx - 2*mu*(1-a)*(Sy - a*Sx) + n*mu**2*(1-a)**2)/n
    sigma = sqrt(sigmah2*2*lam/(1-a**2))
    return(mu, lam, sigma)

S = (100, 120, 1)
delta = 0.2
OU_Calibrate_ML(S, delta)


